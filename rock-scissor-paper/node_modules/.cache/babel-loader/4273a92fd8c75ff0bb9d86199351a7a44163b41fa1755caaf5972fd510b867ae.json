{"ast":null,"code":"const HANDS = ['rock', 'scissor', 'paper'];\nconst WINS = {\n  rock: 'scissor',\n  scissor: 'paper',\n  paper: 'rock'\n};\n\n// 두 개 비교\nexport function compareHand(a, b) {\n  if (WINS[a] === b) return 1;\n  if (WIMS[b] === a) return -1;\n  return 0;\n}\nfunction random(n) {\n  return Math.floor(Math.random() * n);\n}\n\n// HANDS 중 random\nexport function generateRandomHand() {\n  const idx = random(HANDS.length);\n  return HANDS[idx];\n}","map":{"version":3,"names":["HANDS","WINS","rock","scissor","paper","compareHand","a","b","WIMS","random","n","Math","floor","generateRandomHand","idx","length"],"sources":["/Users/gimgyuyeon/Desktop/codeit/rock-scissor-paper/src/utils.js"],"sourcesContent":["const HANDS = ['rock', 'scissor', 'paper'];\n\nconst WINS = {\n  rock: 'scissor',\n  scissor: 'paper',\n  paper: 'rock'\n};\n\n// 두 개 비교\nexport function compareHand(a, b) {\n  if(WINS[a] === b)\n    return 1;\n  if(WIMS[b] === a)\n    return -1;\n  return 0;\n}\n\nfunction random(n) {\n  return Math.floor(Math.random() * n);\n}\n\n// HANDS 중 random\nexport function generateRandomHand() {\n  const idx = random(HANDS.length);\n  return HANDS[idx];\n}"],"mappings":"AAAA,MAAMA,KAAK,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;AAE1C,MAAMC,IAAI,GAAG;EACXC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,OAAO;EAChBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,SAASC,WAAW,CAACC,CAAC,EAAEC,CAAC,EAAE;EAChC,IAAGN,IAAI,CAACK,CAAC,CAAC,KAAKC,CAAC,EACd,OAAO,CAAC;EACV,IAAGC,IAAI,CAACD,CAAC,CAAC,KAAKD,CAAC,EACd,OAAO,CAAC,CAAC;EACX,OAAO,CAAC;AACV;AAEA,SAASG,MAAM,CAACC,CAAC,EAAE;EACjB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACF,MAAM,EAAE,GAAGC,CAAC,CAAC;AACtC;;AAEA;AACA,OAAO,SAASG,kBAAkB,GAAG;EACnC,MAAMC,GAAG,GAAGL,MAAM,CAACT,KAAK,CAACe,MAAM,CAAC;EAChC,OAAOf,KAAK,CAACc,GAAG,CAAC;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}