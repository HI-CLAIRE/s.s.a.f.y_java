{"ast":null,"code":"var _jsxFileName = \"/Users/gimgyuyeon/Desktop/codeit/rock-scissor-paper/src/App.js\",\n  _s = $RefreshSig$();\nimport Button from \"./Button\";\nimport HandButton from \"./HandButton\";\nimport HandIcon from \"./HandIcon\";\nimport { compareHand, generateRandomHand } from \"./utils\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getResult(me, other) {\n  const comparison = compareHand(me, other);\n  if (comparison > 0) return '승리';\n  if (comparison < 0) return '패배';\n  return '무승부';\n}\nfunction App() {\n  _s();\n  const [hand, setHand] = useState('rock');\n  const [otherHand, setOtherHand] = useState('rock');\n  const INITIAL_VALUE = \"rock\";\n  const handleButtonClick = nextHand => {\n    setHand(nextHand);\n    setOtherHand(generateRandomHand());\n  };\n  const handleClearClick = () => {\n    setHand(INITIAL_VALUE);\n    setOtherHand(INITIAL_VALUE);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClearClick,\n      children: \"\\uCC98\\uC74C\\uBD80\\uD130\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: getResult(hand, otherHand)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HandIcon, {\n        value: hand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \"VS\", /*#__PURE__*/_jsxDEV(HandIcon, {\n        value: otherHand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HandButton, {\n        value: \"rock\",\n        onClick: handleButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HandButton, {\n        value: \"scissor\",\n        onClick: handleButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HandButton, {\n        value: \"paper\",\n        onClick: handleButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"07hdkVmTDa4avBjOw23gEQIcRUo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","HandButton","HandIcon","compareHand","generateRandomHand","useState","getResult","me","other","comparison","App","hand","setHand","otherHand","setOtherHand","INITIAL_VALUE","handleButtonClick","nextHand","handleClearClick"],"sources":["/Users/gimgyuyeon/Desktop/codeit/rock-scissor-paper/src/App.js"],"sourcesContent":["import Button from \"./Button\";\nimport HandButton from \"./HandButton\";\nimport HandIcon from \"./HandIcon\";\nimport { compareHand, generateRandomHand } from \"./utils\";\nimport { useState } from \"react\";\n\nfunction getResult(me, other) {\n  const comparison = compareHand(me, other);\n  if(comparison > 0)\n    return '승리';\n  if(comparison < 0)\n    return '패배';\n  return '무승부';\n}\n\nfunction App() {\n  const [hand, setHand] = useState('rock');\n  const [otherHand, setOtherHand] = useState('rock');\n\nconst INITIAL_VALUE = \"rock\";\n\n  const handleButtonClick = (nextHand) => {\n    setHand(nextHand);\n    setOtherHand(generateRandomHand());\n  };\n\n  const handleClearClick = () => {\n    setHand(INITIAL_VALUE);\n    setOtherHand(INITIAL_VALUE);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClearClick}>처음부터</Button>\n      <p>{getResult(hand, otherHand)}</p>\n      <div>\n        <HandIcon value={hand} />\n        VS\n        <HandIcon value={otherHand} />\n      </div>\n      <div>\n        <HandButton value=\"rock\" onClick={handleButtonClick} />\n        <HandButton value=\"scissor\" onClick={handleButtonClick} />\n        <HandButton value=\"paper\" onClick={handleButtonClick} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,EAAEC,kBAAkB,QAAQ,SAAS;AACzD,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,SAAS,CAACC,EAAE,EAAEC,KAAK,EAAE;EAC5B,MAAMC,UAAU,GAAGN,WAAW,CAACI,EAAE,EAAEC,KAAK,CAAC;EACzC,IAAGC,UAAU,GAAG,CAAC,EACf,OAAO,IAAI;EACb,IAAGA,UAAU,GAAG,CAAC,EACf,OAAO,IAAI;EACb,OAAO,KAAK;AACd;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EAEpD,MAAMU,aAAa,GAAG,MAAM;EAE1B,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;IACtCL,OAAO,CAACK,QAAQ,CAAC;IACjBH,YAAY,CAACV,kBAAkB,EAAE,CAAC;EACpC,CAAC;EAED,MAAMc,gBAAgB,GAAG,MAAM;IAC7BN,OAAO,CAACG,aAAa,CAAC;IACtBD,YAAY,CAACC,aAAa,CAAC;EAC7B,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,OAAO,EAAEG,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eAChD;MAAA,UAAIZ,SAAS,CAACK,IAAI,EAAEE,SAAS;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eACnC;MAAA,wBACE,QAAC,QAAQ;QAAC,KAAK,EAAEF;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,qBAEzB,QAAC,QAAQ;QAAC,KAAK,EAAEE;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1B,eACN;MAAA,wBACE,QAAC,UAAU;QAAC,KAAK,EAAC,MAAM;QAAC,OAAO,EAAEG;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eACvD,QAAC,UAAU;QAAC,KAAK,EAAC,SAAS;QAAC,OAAO,EAAEA;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1D,QAAC,UAAU;QAAC,KAAK,EAAC,OAAO;QAAC,OAAO,EAAEA;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAhCQN,GAAG;AAAA,KAAHA,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}